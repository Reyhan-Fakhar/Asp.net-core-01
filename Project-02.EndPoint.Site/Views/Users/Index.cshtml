@using Project_02.Application.Interfaces
@model IEnumerable<Project_02.Domain.ViewModels.UserResultViewModel>
@inject IPermissionService PermissionService
@{
    ViewBag.Title = "لیست کاربران";
    var userName = User.Identity.Name;
    var row = 1;
}
<div class="container-fluid">
    <!-- Page-Title -->
    <div class="row">
        <div class="col-sm-12">
            <div class="page-title-box">
                <h4 class="page-title">کاربران</h4>
            </div><!--end page-title-box-->
        </div><!--end col-->
    </div>
    <!-- end page title end breadcrumb -->
    <section id="basic-datatable">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header bg-black">
                        <div class="search-box float-left col-md-6">
                            <input type="text" id="mySearchText" class="form-control" placeholder="جستجو ...">
                        </div>
                        @if (PermissionService.CheckPermission(8, @userName))
                        {
                            <a type="button" href="@Url.Action("Create", "Users")" class="btn btn-primary waves-effect waves-light col-md-6">+ افزودن کاربر جدید</a>
                        }
                    </div>
                    <input hidden="hidden" id="StatusList" />
                    <div class="card-content">
                        <div class="card-body card-dashboard">
                            <div class="table-responsive" id="orderTable">

                                <table class="table ">
                                    <thead>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.Row)</th>
                                            <th>@Html.DisplayNameFor(model => model.UserName)</th>
                                            <th>@Html.DisplayNameFor(model => model.FullName)</th>
                                            <th>@Html.DisplayNameFor(model => model.UserRole)</th>
                                            <th>@Html.DisplayNameFor(model => model.CreateDate)</th>
                                            <th>@Html.DisplayNameFor(model => model.PhoneNumber)</th>
                                            <th>@Html.DisplayNameFor(model => model.IsActive)</th>
                                            <th>@Html.DisplayNameFor(model => model.Operation)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.Reverse())
                                        {
                                            <tr id="User_@item.UserId">
                                                <td class="index">@(row++)</td>
                                                <td>@item.UserName</td>
                                                <td>@item.FullName</td>
                                                <td>@item.UserRole</td>
                                                <td>@item.CreateDate</td>
                                                <td>@item.PhoneNumber</td>
                                                <td>
                                                    @if (item.IsActive)
                                                    {
                                                        <span class="badge badge-soft-success">فعال</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-soft-danger">غیر فعال</span>
                                                    }
                                                </td>
                                                <td>
                                                    <form method="post" style="display:inline;">
                                                        <button asp-action="ChangeStatues" asp-route-userId="@item.UserId" class="btn btn-sm btn-primary" style="float: none; margin: 4px;"><span class="ti-exchange-vertical"></span></button>
                                                        @if (PermissionService.CheckPermission(9, @userName))
                                                        {
                                                            <a href="@Url.Action("Edit", "Users", new { userId = item.UserId })" class="tabledit-delete-button btn btn-sm btn-info" style="float: none; margin: 4px;"><span class="ti-pencil"></span></a>
                                                        }
                                                        @if (PermissionService.CheckPermission(10, @userName))
                                                        {
                                                            <button type="button" onclick="DeleteUser(@item.UserId)" class="tabledit-delete-button btn btn-sm btn-danger" style="float: none; margin: 4px;"><span class="ti-trash"></span></button>
                                                        }
                                                        <button type="button" onclick="getUserDetails(@item.UserId)" class="tabledit-delete-button btn btn-sm btn-primary" style="float: none; margin: 4px;"><span class="ti-id-badge"></span></button>
                                                    </form>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

</div>
@section MyStyles
{
    <link href="~/dark-rtl/assets/vendors/css/tables/datatable/datatables.min.css" rel="stylesheet" type="text/css">
}
@section MyScripts
{
    <script src="~/dark-rtl/assets/vendors/js/extensions/sweetalert2.all.min.js"></script>
    <script src="~/dark-rtl/assets/vendors/js/tables/datatable/datatables.min.js"></script>
    <script src="~/dark-rtl/assets/plugins/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="~/dark-rtl/assets/js/scripts/datatables/datatable.js"></script>
    <script src="~/dark-rtl/assets/pages/jquery.datatable.init.js"></script>

    <script type="text/javascript">
        async function getUserDetails(userId) {
            try {
                const response = await fetch('@Url.Action("GetUserDetails", "Users")?userId=' + userId);
                if (response.ok) {
                    const userDetails = await response.json();

                    Swal.fire({
                        title: userDetails.userName,
                        html: `<p><strong>نقش کاربر:</strong> ${userDetails.roleName}</p>
                                                   <p><strong>شماره تلفن:</strong> ${userDetails.phoneNumber}</p>
                                                   <p><strong>وضعیت:</strong> ${userDetails.isActive}</p>
                                                   <p><strong>تاریخ ایجاد:</strong> ${userDetails.createDate}</p>
                                                   <p><strong>سطح دسترسی:</strong> ${userDetails.permissionsName.join(', ')}</p>`,
                        icon: 'info',
                        confirmButtonText: 'بستن'
                    });
                } else {
                    Swal.fire({
                        title: 'خطا',
                        text: 'نتیجه‌ای برای نمایش پیدا نشد.',
                        icon: 'error',
                        confirmButtonText: 'بستن'
                    });
                }
            } catch (error) {
                Swal.fire({
                    title: 'خطا',
                    text: 'مشکلی در بارگذاری اطلاعات پیش آمد.',
                    icon: 'error',
                    confirmButtonText: 'بستن'
                });
            }
        }

        function SetIndex() {
            $("td.index").each(function (index) {
                $(this).text(++index);

            });
        }
        function DeleteUser(userId) {
            Swal.fire({
                title: 'آیا از حذف کاربر مطمئنید؟',
                text: "این عمل قابل بازگشت نخواهد بود!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'تایید',
                confirmButtonClass: 'btn btn-primary',
                cancelButtonClass: 'btn btn-danger ml-1',
                cancelButtonText: 'انصراف',
                buttonsStyling: false,
            }).then(function (result) {
                if (result.value) {
                    $.post("/Users/Delete?userId=" + userId, function (data) {

                        if (data.isSuccess) {
                            Swal.fire({
                                type: "success",
                                title: 'حذف شد!',
                                text: data.message,
                                confirmButtonClass: 'btn btn-success',
                                confirmButtonText: 'باشه',
                            });

                            $("#User_" + userId).remove();
                            SetIndex();

                        }
                        else {
                            Swal.fire({
                                title: "خطا!",
                                text: data.message,
                                type: "error",
                                confirmButtonClass: 'btn btn-primary',
                                confirmButtonText: 'باشه',
                                buttonsStyling: false,
                            });
                        }
                    });
                }
            });
        }

        // function DeleteUser(userId) {
        //     swal.fire({
        //         title: 'حذف کاربر',
        //         text: "کاربر گرامی از حذف کاربر مطمئن هستید؟",
        //         icon: 'warning',
        //         showCancelButton: true,
        //         confirmButtonColor: '#d33',
        //         cancelButtonColor: '#7cacbe',
        //         confirmButtonText: 'بله ، کاربر حذف شود',
        //         cancelButtonText: 'خیر'
        //     }).then((result) => {
        //         if (result.value) {
        //             var postData = {
        //                 'userId': userId,
        //             };

        //             $.ajax({
        //                 contentType: 'application/x-www-form-urlencoded',
        //                 dataType: 'json',
        //                 type: "POST",
        //                 url: "Delete",
        //                 data: postData,
        //                 success: function (response) {
        //                     location.reload();
        //                 },
        //                 error: function (xhr, status, error) {
        //                     swal.fire({
        //                         title: 'خطا',
        //                         text: 'مشکلی در حذف کاربر رخ داد!',
        //                         icon: 'error',
        //                         confirmButtonText: 'باشه'
        //                     });
        //                 }
        //             });
        //         }
        //     })
        // }
    </script>

}