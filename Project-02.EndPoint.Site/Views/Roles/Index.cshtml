@using Project_02.Application.Interfaces
@model IEnumerable<Project_02.Domain.ViewModels.RoleResultViewModel>
@inject IPermissionService PermissionService


@{
    ViewBag.Title = "لیست نقش‌ها";
    var userName = User.Identity.Name;
    var row = 1;
}
<div class="container-fluid">
    <!-- Page-Title -->
    <div class="row">
        <div class="col-sm-12">
            <div class="page-title-box">
                <h4 class="page-title">لیست نقش‌ها</h4>
            </div><!--end page-title-box-->
        </div><!--end col-->
    </div>
    <!-- end page title end breadcrumb -->
    <section id="basic-datatable">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header bg-black">
                        <div class="search-box float-left col-md-6">
                            <input type="text" id="mySearchText" class="form-control" placeholder="جستجو ...">
                        </div>
                        @if (PermissionService.CheckPermission(3, @userName))
                        {
                            <a type="button" href="@Url.Action("Create", "Roles")" class="btn btn-primary waves-effect waves-light col-md-6">+ افزودن نقش جدید</a>
                        }
                    </div>
                    <input hidden="hidden" id="StatusList" />
                    <div class="card-content">
                        <div class="card-body card-dashboard">
                            <div class="table-responsive" id="orderTable">
                                <table id="dataTableStuff" class="table ">
                                    <thead>
                                        <tr>
                                            <th>@Html.DisplayNameFor(model => model.Row)</th>
                                            <th>@Html.DisplayNameFor(model => model.RoleName)</th>
                                            <th>@Html.DisplayNameFor(model => model.CreateDate)</th>
                                            <th>@Html.DisplayNameFor(model => model.Operation)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    @foreach (var role in Model.Reverse())
                                    {
                                        <tr>
                                            <td>@(row++)</td>
                                            <td>@role.RoleName</td>
                                            <td>@role.CreateDate</td>
                                            <td>
                                                <form method="post" style="display:inline;">
                                                    @if (PermissionService.CheckPermission(4, @userName))
                                                    {
                                                        <a href="@Url.Action("Edit", "Roles", new { roleId = role.RoleId })" class="tabledit-delete-button btn btn-sm btn-info" style="float: none; margin: 4px;"><span class="ti-pencil"></span></a>
                                                    }
                                                    @if (PermissionService.CheckPermission(5, @userName))
                                                    {
                                                        <button type="button" onclick="DeleteRole(@role.RoleId)" class="tabledit-delete-button btn btn-sm btn-danger" style="float: none; margin: 4px;"><span class="ti-trash"></span></button>
                                                    }
                                                    <button type="button" onclick="GetRoleDetails(@role.RoleId)" class="tabledit-delete-button btn btn-sm btn-primary" style="float: none; margin: 4px;"><span class="ti-id-badge"></span></button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section MyStyles
{
    <link href="~/dark-rtl/assets/plugins/sweet-alert2/sweetalert2.min.css" rel="stylesheet" />
}
@section MyScripts
{
    <script src="~/dark-rtl/assets/plugins/sweet-alert2/sweetalert2.min.js"></script>
    <script>
        async function GetRoleDetails(roleId) {
            try {
                const response = await fetch('@Url.Action("GetRoleDetails", "Roles")?roleId=' + roleId);
                if (response.ok) {
                    const roleDetails = await response.json();

                    Swal.fire({
                        title: roleDetails.roleName,
                        html: `<p><strong>تاریخ ایجاد:</strong> ${roleDetails.createDate}</p>
                                                               <p><strong>سطح دسترسی:</strong> ${roleDetails.permissionsName.join(', ')}</p>`,
                        icon: 'info',
                        confirmButtonText: 'بستن'
                    });
                } else {
                    Swal.fire({
                        title: 'خطا',
                        text: 'نتیجه‌ای برای نمایش پیدا نشد.',
                        icon: 'error',
                        confirmButtonText: 'بستن'
                    });
                }
            } catch (error) {
                Swal.fire({
                    title: 'خطا',
                    text: 'مشکلی در بارگذاری اطلاعات پیش آمد.',
                    icon: 'error',
                    confirmButtonText: 'بستن'
                });
            }
        }

        function DeleteRole(roleId) {
    swal.fire({
        title: 'حذف نقش',
        text: "کاربر گرامی از حذف نقش مطمئن هستید؟",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#7cacbe',
        confirmButtonText: 'بله، نقش حذف شود',
        cancelButtonText: 'خیر'
    }).then((result) => {
        if (result.value) {
            var postData = {
                'roleId': roleId,
            };

            $.ajax({
                contentType: 'application/x-www-form-urlencoded',
                dataType: 'json',
                type: "POST",
                url: "Delete",
                data: postData,
                success: function (response) {
                    if (response.success) {
                        swal.fire({
                            title: 'حذف موفق',
                            text: 'نقش با موفقیت حذف شد.',
                            icon: 'success',
                            confirmButtonText: 'باشه'
                        }).then(() => {
                            location.reload(); 
                        });
                    } else {
                        swal.fire({
                            title: 'خطا',
                            text: response.message,
                            icon: 'error',
                            confirmButtonText: 'باشه'
                        });
                    }
                },
                error: function (xhr, status, error) {
                    swal.fire({
                        title: 'خطا',
                        text: 'مشکلی در حذف نقش رخ داد!',
                        icon: 'error',
                        confirmButtonText: 'باشه'
                    });
                }
            });
        }
    });
}
        
    </script>
}